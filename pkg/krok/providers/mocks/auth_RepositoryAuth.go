// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/krok-o/krok/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// RepositoryAuth is an autogenerated mock type for the RepositoryAuth type
type RepositoryAuth struct {
	mock.Mock
}

// CreateRepositoryAuth provides a mock function with given fields: ctx, repositoryID, info
func (_m *RepositoryAuth) CreateRepositoryAuth(ctx context.Context, repositoryID int, info *models.Auth) error {
	ret := _m.Called(ctx, repositoryID, info)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, *models.Auth) error); ok {
		r0 = rf(ctx, repositoryID, info)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetRepositoryAuth provides a mock function with given fields: ctx, id
func (_m *RepositoryAuth) GetRepositoryAuth(ctx context.Context, id int) (*models.Auth, error) {
	ret := _m.Called(ctx, id)

	var r0 *models.Auth
	if rf, ok := ret.Get(0).(func(context.Context, int) *models.Auth); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Auth)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
