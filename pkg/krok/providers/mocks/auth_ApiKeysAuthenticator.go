// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/krok-o/krok/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// ApiKeysAuthenticator is an autogenerated mock type for the ApiKeysAuthenticator type
type ApiKeysAuthenticator struct {
	mock.Mock
}

// Encrypt provides a mock function with given fields: ctx, secret
func (_m *ApiKeysAuthenticator) Encrypt(ctx context.Context, secret []byte) ([]byte, error) {
	ret := _m.Called(ctx, secret)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, []byte) []byte); ok {
		r0 = rf(ctx, secret)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, []byte) error); ok {
		r1 = rf(ctx, secret)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Match provides a mock function with given fields: ctx, key
func (_m *ApiKeysAuthenticator) Match(ctx context.Context, key *models.APIKey) error {
	ret := _m.Called(ctx, key)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.APIKey) error); ok {
		r0 = rf(ctx, key)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
