syntax = "proto3";

package repository.v1;

option go_package = "github.com/krok-o/krok-o/proto/repository/v1;repov1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// Repository defines the main type for a repository.
message Repository {
  int32 id = 1;
  string name = 2;
  string url = 3;
  int32 vcs = 4;
  string unique_url = 5;
  Auth auth = 6;
}

// Auth information for the repository.
message Auth {
  string ssh = 1;
  string username = 2;
  string password = 3;
  string hook_secret = 4;
}

message Repositories {
  repeated Repository items = 1;
}

message CreateRepositoryRequest {
  string name = 1;
  string url = 2;
  int32 vcs = 3;
  Auth auth = 4;
}

message GetRepositoryRequest {
  google.protobuf.Int32Value id = 1;
}

message ListRepositoryRequest {
  string name = 1;
  int32 vcs = 2;
}

message UpdateRepositoryRequest {
  google.protobuf.Int32Value id = 1;
  string name = 2;
}

message DeleteRepositoryRequest {
  google.protobuf.Int32Value id = 1;
}

service RepositoryService {
  rpc CreateRepository(CreateRepositoryRequest) returns (Repository) {}
  rpc UpdateRepository(UpdateRepositoryRequest) returns (Repository) {}
  rpc GetRepository(GetRepositoryRequest) returns (Repository) {}
  rpc ListRepositories(ListRepositoryRequest) returns (Repositories) {}
  rpc DeleteRepository(DeleteRepositoryRequest) returns (google.protobuf.Empty) {}
}
