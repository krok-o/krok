version: 2

jobs:
  linter:
    working_directory: /go/src/github.com/staple-org/staple
    docker:
      - image: circleci/golang:1.15.6
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: Install linter
          command: |
            go get -u golang.org/x/lint/golint
      - run:
          name: Run linter
          command: |
            make lint
  test_and_coverage:
    working_directory: /go/src/github.com/krok-o/krok
    docker:
      - image: circleci/golang:1.15.6
        environment:
          GO111MODULE: "on"
      - image: postgres:13.1-alpine
        environment:
          POSTGRES_USER: "krok"
          POSTGRES_PASSWORD: "password123"
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt install -y postgresql-client
      - run:
          name: Create sample database
          command: |
            set -e
            psql -U krok -h localhost -p 5432 -f dbinit/init.sql
      - run:
          name: Run integration tests
          command: |
            #!/usr/bin/env bash
            set -e
            echo "" > coverage.txt
            for d in $(go list ./... | grep -v vendor); do
              go test -coverprofile=profile.out -coverpkg=./... $d
              if [ -f profile.out ]; then
                cat profile.out >> coverage.txt
                rm profile.out
              fi
            done
      - run:
          name: Upload test report to codecov.io
          command: bash <(curl -s https://codecov.io/bash)
  compile:
    working_directory: /go/src/github.com/krok-o/krok
    docker:
      - image: circleci/golang:1.15.6
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: Make binaries
          command: |
            make bootstrap
            make binaries
workflows:
  version: 2
  test_and_compile:
    jobs:
      - linter
      - test_and_coverage
      - compile
